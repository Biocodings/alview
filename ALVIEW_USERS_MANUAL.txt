
Alview User's Manual
December 11, 2014 

XXXXXXXXXXXX This is being updated for new version on December 11, 2014 .
This should be ready by December 15th 2014.

XXXXXXXXXXXXXXXXXX

Contents.
I.   Introduction.
II.  Power User Fast Start
III. Installation and/or compilation.
IV.  Operation as Command Line Utility
V.   Operation as Web Server
VI.  General Operation
VII. alview.conf file

I. Introduction.
Alview is available via github at https://github.com/NCIP/alview
It currently supports hg18 and hg19 and large genome support files are
required.
Alview is a fast computer program for viewing BAM files.  The most powerful
way 
to use the program is to use the command line and batch requests for 
very rapid viewing using a slide show.  This takes some user engagement.  

Otherwise, it is useful for browsing bam files and checking interesting 
locations as a GUI desktop or webserver.

As just mentioned, it comes in three forms: 

#1 as a real standalone desktop GUI application.
#2 as a command line utility.  
#3 as a CGI web server.

It is supported on three Operating Systems:

#1 Windows 32 bit
#2 Linux 64 bit 
#3 Apple MAC 64 bit

This is newly released, we'd appreciate feedback. Contact me at 
my email address : finneyr@mail.nih.gov


II.  Power User Fast Start
Alview is a webserver or command line utility or a real GUI application.  For 
GUI, download the package for your operating system.  For this GUI desktop 
application, Qt is the GUI toolkit.   The different OS versions of Alview QT
GUI 
all require the QT shared libraries for that particular system.  Apple MAC and
MS Windows packages 
with EXES and libraries and support data are download-able.  Check "alview" 
github page for latest locations of Alview OS specific packages.  

Alview Apple MAC can be downloaded and run via a DMG file.

Alview Windows package is a tarball.  This is an easy way of distributing
Alview 
that bypasses your local systems security team's frequent "You don't have 
permission to install this on Windows!" message.  Download, untar the tarball.
IMPORTANT: run the Windows C run time setup program from Microsoft (the other 
.exe file provided: the program "VS2012.4.exe" ).  You can also download 
VS2112.4.exe program from Microsoft and run it.  Finally make sure you have 
permissions to the files in the resulting untarred directory where the 
alview.exe file is.  You must have read permissions and execute permissions on 
the dlls and exe files.

Linux users must download the contents of BINARIES/LINUX directory (at alview
github)
and set LD_LIBRARY_PATH properly and set values in the configuration text file
called 
"alview.conf" is correct.  In all cases, make sure the file "alview.conf" is 
correct for your system. This file is editable and fixable via a text editor.

For command line or webserver, you have to compile it yourself. It's pretty 
straightforward for Linux and Apple MAC ...  

Install 1) GD graphics library 2) samtools, 3) curses and 4)zlib if they are
not already there.  
Apple users may have to do the "configure/make/install" routine for some
packages as there is limited 
official support from Apple for many software solutions.  Linux users should
have packages easily 
install-able via apt-get or yum or your GUI installer.  Know in what
directories the libraries 
are as you'll need to provide them to the linker.  

Sources for Windows versions of the required support libraries are provided at
Alview github.  
These support libraries for windows have been edited to force them to compile
using Visual C++.
The verion of Visual Studio used to compile alview is Microsoft Visual Studio
11.0 (aka VS2012.x86 ).
A free command line version is avaliable.
Set the appropriate IFDEF flags.  These flags are APPLE, UNIX, WINDOWS,
WEB_SERVER, 
CMD_LINE, QT_GUI.  Set UNIX=1 for Linux. You can't set them as compiler flags
or 
just hard wire them near the top of the "alviewcore.cpp" file.  Compile 
alview.cpp with proper flags and pointing to the proper libraries.   
You can compile webserver and command line statically rather than requiring 
shared libraries if you wish.

Windows users may just want the linux version; just compile linux version and 
under CYGWIN and just use CYGWIN.  Otherwise, read the windows make file 
carefully and adjust to your system. 

For the webserver, copy alview to the cgi-bin directory and check permissions.
Then, set up the genome data directory.  

You will have to setup the genome data directory for command line version,
also.

Setting up the genome data directory involves this ... 
Download the large genome data support files targzipped in the file named
alview_hg18hg19_genomedata.tar.bz2 
from my dropbox account at
https://www.dropbox.com/sh/ymszmksj6v83rmt/OCLsYTjgSu . 
This is large (>1GB) file and takes a while to decompress and "untar".
Use these commands

bzip2 -d alview_hg18hg19_genomedata.tar.bz2

tar xvf alview_hg18hg19_genomedata.tar 

Edit alview.conf file to point to the correct genome data location that you
just created, make sure cgi programs can access this.
If in doubt, just set it up off the executable (cgi-bin) directory and default
locaiton will get detected.


III. Installation and/or Compilation.
At the Alview github page, check README.md file for the latest versions with 
and current instructions.  You can just install GUIs on your desktop, 
but must compile for webserver or command line.

Windows GUI: Download tar file.  Untar. Run the provided VS2012.4.exe program. 
This is Microsoft's C run time library update.  Note the file "alview.conf".   
Typical reason for alview failure is that data in this file is wrong.  The 
default alview.conf for windows should work fine, though, unless you move
files.   

APPLE MAC GUI: Download DMG files, click on it.  If there is a complaint about
multiple 
copies of a library, you have to fix it by setting your library path.
(working on exact method to do so that it works every time for everyone).

LINUX GUI: Download all binaries in BINARIES/LINUX directory for Alview
github.  
Set permissions for read+execute for shared objects (*.so) and alview
executable file.  Set 
LD_LIBRARY_PATH to location of the shared libraries (*.so) files supplied in 
the directory.  This is easy and a carefully googling of LD_LIBRARY_PATH
should 
give you the answer on how to do this.   Ask a knowledgeable 
UNIX/LINUX/MACcommand line person if you need help.  You must also download
the 
genome support files.  Please make sure the configuration file "alview.conf"
is 
set correctly to point to these large files.  This is a text file and
editable.
You must also download the large genome data support files targzipped in the
file 
named alview_hg18hg19_genomedata.tar.bz2 from my dropbox account at 
https://www.dropbox.com/sh/ymszmksj6v83rmt/OCLsYTjgSu . This is large (>1GB)
file 
and takes a while to decompress and "untar". Grab the binary and shared
libraries 
from BINARIES directory hereabouts on Github. 
The TWO command lines to prepare this file (on LINUX, Mac command line or
cygwin [ or cmd.exe with unix utilities ] ) ...

bzip2 -d alview_hg18hg19_genomedata.tar.bz2

tar xvf alview_hg18hg19_genomedata.tar 

Linux version is 64bit specific. Set up the "alview.conf" file .

Compilation for command line and webserver is straightforward and controlled
by ifdefs detailed near the top of the "alviewcore.cpp" file.  

Example compilation for WEBSERVER on Linux ..

g++ -DUNIX -DWEB_SERVER=1 -Wall -o alview alviewcore.cpp  -lpthread -lz -Wall
-I/h1/finneyr/samtools-0.1.18/ /h1/finneyr/samtools-0.1.18/libbam.a -lm -lz
-lgd /h1/finneyr/zlib-1.2.3/libz.a

Note that you will have edit the "-I" include path argument and location of
the libraries (*.a files) arguments for you system.
g++ is the C++ gnu compiler.


IV.  Operation as Command Line Utility.
You must compile for standalone.  It's pretty easy.

Install 1 samtools, 2) curses and 3)zlib if they are 
not already there.  Set the appropriate IFDEF flags.  These flags are 
APPLE, UNIX, WINDOWS, WEB_SERVER, CMD_LINE, QT_GUI.  You can set them via 
the command line program options as you invoke the compiler.

Example compilation on Linux for command line ...

gcc -Wall -DUNIX=1 -DCMD_LINE=1 -o alview alviewcore.cpp  -I.
-I/data/nextgen/finneyr/samtools-0.1.18/
-L/data/nextgen/finneyr/samtools-0.1.18/  -lbam -lm -lz -lgd  -lstdc++


Running alview command line ...
The command line argument are ...
    arg1 fn_bam = name of bam files (will use to determine bai file)
    arg2 outimg = output file name ( png file)
    arg3 position = example chr17:10000-10500  it can handle 17:10000-10500
type positions
    arg4 blds = build string (example "hg19")
    (optional) arg5 ih = image height
    (optional) arg6 iw = image width

So, create a batch file of BAMS and , for instance, SNP call regions to
examine.
You can view the output in a slideshow, the file "slideshowtemplate.html" is a
template file
we provide for assisting in this.
Set the "IMGSHERE" and "ANOSHERE" lines with image files and annotation.  This
is a little work, but
makes viewing your massive 40,000 SNP calls easy to review !!!!
This is probably the true power user's tool for reviewing his lab results and
prioritizing further work.
This can identify those "Illumina Chemistry Problems" areas and save you a lot
of grief.


V.   Operation as Web Server
Compile the file alviewcore.cpp with appropriate OS flag and define 
WEBSERVER to 1.  Install binary in cgi-bin directory and run as web
application.
Edit the list of files to list the full paths to your bamfiles.

VI.  Running Alview as a GUI 
Enter the genomic coordinates in the position box or a HUGO gene name.
You can select a region to zoom in.
You can use the navigation buttons to move around.
You can use the quality flag to view a grayscale graphic of the quality
values.


VII. alview.conf file

Example "alview.conf" file , this one is setup for windows...
This must be a text file, not a word file or html file.
---NEXT LINE IS FIRST LINE 
# comments stat with #
# USE / at end of directories
# windows  ...
GENOMEDATADIR=c:\rich\GENOMEDATA\
# linux  ...
#GENOMEDATADIR=/home/rfinney/GENOMEDATA/
# mac  ...
#GENOMEDATADIR=/Users/finneyr/GENOMEDATA/
---PREVIOUS LINE IS LAST LINE OF alview.conf CONFIGURATION TEXT FILE

#end

#01234567890123456789012345678901234567890123456789012345678901234567890123456789



